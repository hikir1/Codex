{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4","program":"C:\\Users\\Richard\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","deflate","--edition=2018","C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=44d4f5db3cdff26b","-C","extra-filename=-44d4f5db3cdff26b","--out-dir","D:\\rust\\proj\\codex\\target\\rls\\debug\\deps","-L","dependency=D:\\rust\\proj\\codex\\target\\rls\\debug\\deps","--extern","adler32=D:\\rust\\proj\\codex\\target\\rls\\debug\\deps\\libadler32-8b95bf8c682362dd.rmeta","--extern","byteorder=D:\\rust\\proj\\codex\\target\\rls\\debug\\deps\\libbyteorder-6870dd8d4a80c06d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Richard\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc"],"output":"D:\\rust\\proj\\codex\\target\\rls\\debug\\deps\\libdeflate-44d4f5db3cdff26b.rmeta"},"prelude":{"crate_id":{"name":"deflate","disambiguator":[10628528326938120618,18440094334934241259]},"crate_root":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src","external_crates":[{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9841458385686728621,15575055662541448531]}},{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[17919213227389061864,3687462448081315021]}},{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[117649788198974291,9401830764183487500]}},{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16805511066922772367,1475770714066637805]}},{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6932327359549611065,14246427449334719808]}},{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[10224979718716634612,8460908855091801084]}},{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3917603931972316087,6031530912861913142]}},{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1909649518730319250,15976693491490976054]}},{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9858513891483661062,11973857511412016831]}},{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[2302790573754666385,5170192652780636563]}},{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[16882338025965339030,8535442690485361914]}},{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4842953915852994816,3810175436331841417]}},{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14037401367256211658,2835270069367976133]}},{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","num":14,"id":{"name":"adler32","disambiguator":[6025223598214700864,13826078711392890448]}},{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","num":15,"id":{"name":"byteorder","disambiguator":[10347868317660519545,8753666438060926912]}}],"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":0,"byte_end":14938,"line_start":1,"line_end":491,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":3007,"byte_end":3018,"line_start":101,"line_end":101,"column_start":31,"column_end":42},"alias_span":null,"name":"Compression","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":3020,"byte_end":3038,"line_start":101,"line_end":101,"column_start":44,"column_end":62},"alias_span":null,"name":"CompressionOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":3040,"byte_end":3054,"line_start":101,"line_end":101,"column_start":64,"column_end":78},"alias_span":null,"name":"SpecialOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":3071,"byte_end":3083,"line_start":102,"line_end":102,"column_start":15,"column_end":27},"alias_span":null,"name":"MatchingType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":3291,"byte_end":3305,"line_start":110,"line_end":110,"column_start":29,"column_end":43},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":643}},{"kind":"Use","ref_id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":3307,"byte_end":3318,"line_start":110,"line_end":110,"column_start":45,"column_end":56},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":643}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":0,"byte_end":14938,"line_start":1,"line_end":491,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":7},{"krate":0,"index":29},{"krate":0,"index":66},{"krate":0,"index":97},{"krate":0,"index":120},{"krate":0,"index":142},{"krate":0,"index":189},{"krate":0,"index":219},{"krate":0,"index":283},{"krate":0,"index":354},{"krate":0,"index":369},{"krate":0,"index":401},{"krate":0,"index":463},{"krate":0,"index":474},{"krate":0,"index":483},{"krate":0,"index":516},{"krate":0,"index":530},{"krate":0,"index":544},{"krate":0,"index":604},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":656}],"decl_id":null,"docs":" An implementation an encoder using [DEFLATE](http://www.gzip.org/zlib/rfc-deflate.html)\n compression algorithm in pure Rust.","sig":null,"attributes":[{"value":"! An implementation an encoder using [DEFLATE](http://www.gzip.org/zlib/rfc-deflate.html)","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":0,"byte_end":91,"line_start":1,"line_end":1,"column_start":1,"column_end":92}},{"value":"! compression algorithm in pure Rust.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":92,"byte_end":131,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":132,"byte_end":135,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! This library provides functions to compress data using the DEFLATE algorithm,","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":136,"byte_end":217,"line_start":4,"line_end":4,"column_start":1,"column_end":82}},{"value":"! optionally wrapped using the [zlib](https://tools.ietf.org/html/rfc1950) or","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":218,"byte_end":297,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"! [gzip](http://www.gzip.org/zlib/rfc-gzip.html) formats.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":298,"byte_end":357,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"! The current implementation is still a bit lacking speed-wise compared to C-libraries","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":358,"byte_end":446,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"! like zlib and miniz.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":447,"byte_end":471,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":472,"byte_end":475,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! The deflate algorithm is an older compression algorithm that is still widely used today,","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":476,"byte_end":568,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"! by e.g html headers, the `.png` image format, the Unix `gzip` program and commonly in `.zip`","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":569,"byte_end":665,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"! files. The `zlib` and `gzip` formats are wrappers around DEFLATE-compressed data, containing","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":666,"byte_end":762,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"! some extra metadata and a checksum to validate the integrity of the raw data.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":763,"byte_end":844,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":845,"byte_end":848,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! The deflate algorithm does not perform as well as newer algorithms used in file formats such as","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":849,"byte_end":948,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"! `.7z`, `.rar`, `.xz` and `.bz2`, and is thus not the ideal choice for applications where","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":949,"byte_end":1041,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"! the `DEFLATE` format (with or without wrappers) is not required.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1042,"byte_end":1110,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1111,"byte_end":1114,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! Support for the gzip wrapper (the wrapper that is used in `.gz` files) is disabled by default","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1115,"byte_end":1212,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"! but can be enabled with the `gzip` feature.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1213,"byte_end":1260,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1261,"byte_end":1264,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! As this library is still in development, the compression output may change slightly","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1265,"byte_end":1352,"line_start":22,"line_end":22,"column_start":1,"column_end":88}},{"value":"! between versions.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1353,"byte_end":1374,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1375,"byte_end":1378,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1379,"byte_end":1382,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! # Examples:","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1383,"byte_end":1398,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"! ## Simple compression function:","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1399,"byte_end":1434,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"! ``` rust","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1435,"byte_end":1447,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"! use deflate::deflate_bytes;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1448,"byte_end":1479,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1480,"byte_end":1483,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! let data = b\"Some data\";","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1484,"byte_end":1512,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"! let compressed = deflate_bytes(data);","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1513,"byte_end":1554,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"! # let _ = compressed;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1555,"byte_end":1580,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"! ```","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1581,"byte_end":1588,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1589,"byte_end":1592,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! ## Using a writer:","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1593,"byte_end":1615,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"! ``` rust","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1616,"byte_end":1628,"line_start":37,"line_end":37,"column_start":1,"column_end":13}},{"value":"! use std::io::Write;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1629,"byte_end":1652,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1653,"byte_end":1656,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! use deflate::Compression;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1657,"byte_end":1686,"line_start":40,"line_end":40,"column_start":1,"column_end":30}},{"value":"! use deflate::write::ZlibEncoder;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1687,"byte_end":1723,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1724,"byte_end":1727,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1728,"byte_end":1769,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"! let mut encoder = ZlibEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1770,"byte_end":1843,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"! encoder.write_all(data).expect(\"Write error!\");","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1844,"byte_end":1895,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"! let compressed_data = encoder.finish().expect(\"Failed to finish compression!\");","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1896,"byte_end":1979,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"! # let _ = compressed_data;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":1980,"byte_end":2010,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":2011,"byte_end":2018,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49326,"byte_end":49330,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Fast","qualname":"::compression_options::Compression::Fast","value":"Compression::Fast","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Fast minimal compression (`CompressionOptions::fast()`).\n","sig":null,"attributes":[{"value":"/ Fast minimal compression (`CompressionOptions::fast()`).","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49261,"byte_end":49321,"line_start":32,"line_end":32,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49393,"byte_end":49400,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"name":"Default","qualname":"::compression_options::Compression::Default","value":"Compression::Default","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Default level (`CompressionOptions::default()`).\n","sig":null,"attributes":[{"value":"/ Default level (`CompressionOptions::default()`).","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49336,"byte_end":49388,"line_start":34,"line_end":34,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49654,"byte_end":49658,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"Best","qualname":"::compression_options::Compression::Best","value":"Compression::Best","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Higher compression level (`CompressionOptions::high()`).","sig":null,"attributes":[{"value":"/ Higher compression level (`CompressionOptions::high()`).","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49406,"byte_end":49466,"line_start":36,"line_end":36,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49471,"byte_end":49474,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Best in this context isn't actually the highest possible level","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49479,"byte_end":49545,"line_start":38,"line_end":38,"column_start":5,"column_end":71}},{"value":"/ the encoder can do, but is meant to emulate the `Best` setting in the `Flate2`","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49550,"byte_end":49632,"line_start":39,"line_end":39,"column_start":5,"column_end":87}},{"value":"/ library.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49637,"byte_end":49649,"line_start":40,"line_end":40,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49243,"byte_end":49254,"line_start":31,"line_end":31,"column_start":10,"column_end":21},"name":"Compression","qualname":"::compression_options::Compression","value":"Compression::{Fast, Default, Best}","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686}],"decl_id":null,"docs":" An enum describing the level of compression to be used by the encoder","sig":null,"attributes":[{"value":"/ An enum describing the level of compression to be used by the encoder","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":48827,"byte_end":48900,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":48901,"byte_end":48904,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Higher compression ratios will take longer to encode.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":48905,"byte_end":48962,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":48963,"byte_end":48966,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is a simplified interface to specify a compression level.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":48967,"byte_end":49033,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49034,"byte_end":49037,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [See also `CompressionOptions`](./struct.CompressionOptions.html) which provides for","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49038,"byte_end":49126,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/ tweaking the settings more finely.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49127,"byte_end":49165,"line_start":29,"line_end":29,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49936,"byte_end":49942,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Normal","qualname":"::compression_options::SpecialOptions::Normal","value":"SpecialOptions::Normal","parent":{"krate":0,"index":706},"children":[],"decl_id":null,"docs":" Compress normally.\n","sig":null,"attributes":[{"value":"/ Compress normally.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49909,"byte_end":49931,"line_start":53,"line_end":53,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":50002,"byte_end":50013,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"_ForceFixed","qualname":"::compression_options::SpecialOptions::_ForceFixed","value":"SpecialOptions::_ForceFixed","parent":{"krate":0,"index":706},"children":[],"decl_id":null,"docs":" Force fixed Huffman tables. (Unimplemented!).\n","sig":null,"attributes":[{"value":"/ Force fixed Huffman tables. (Unimplemented!).","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49948,"byte_end":49997,"line_start":55,"line_end":55,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":50086,"byte_end":50098,"line_start":58,"line_end":58,"column_start":5,"column_end":17},"name":"_ForceStored","qualname":"::compression_options::SpecialOptions::_ForceStored","value":"SpecialOptions::_ForceStored","parent":{"krate":0,"index":706},"children":[],"decl_id":null,"docs":" Force stored (uncompressed) blocks only. (Unimplemented!).\n","sig":null,"attributes":[{"value":"/ Force stored (uncompressed) blocks only. (Unimplemented!).","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":50019,"byte_end":50081,"line_start":57,"line_end":57,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49888,"byte_end":49902,"line_start":52,"line_end":52,"column_start":10,"column_end":24},"name":"SpecialOptions","qualname":"::compression_options::SpecialOptions","value":"SpecialOptions::{Normal, _ForceFixed, _ForceStored}","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":711}],"decl_id":null,"docs":" Enum allowing some special options (not implemented yet)!\n","sig":null,"attributes":[{"value":"/ Enum allowing some special options (not implemented yet)!","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49766,"byte_end":49827,"line_start":50,"line_end":50,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":50664,"byte_end":50682,"line_start":78,"line_end":78,"column_start":12,"column_end":30},"name":"CompressionOptions","qualname":"::compression_options::CompressionOptions","value":"CompressionOptions { max_hash_checks, lazy_if_less_than, matching_type, special }","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731}],"decl_id":null,"docs":" A struct describing the options for a compressor or compression function.","sig":null,"attributes":[{"value":"/ A struct describing the options for a compressor or compression function.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":50459,"byte_end":50536,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":50537,"byte_end":50540,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ These values are not stable and still subject to change!","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":50541,"byte_end":50601,"line_start":76,"line_end":76,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51120,"byte_end":51135,"line_start":87,"line_end":87,"column_start":9,"column_end":24},"name":"max_hash_checks","qualname":"::compression_options::CompressionOptions::max_hash_checks","value":"u16","parent":{"krate":0,"index":727},"children":[],"decl_id":null,"docs":" The maximum number of checks to make in the hash table for matches.","sig":null,"attributes":[{"value":"/ The maximum number of checks to make in the hash table for matches.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":50689,"byte_end":50760,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":50765,"byte_end":50768,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Higher numbers mean slower, but better compression. Very high (say `>1024`) values","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":50773,"byte_end":50859,"line_start":81,"line_end":81,"column_start":5,"column_end":91}},{"value":"/ will impact compression speed a lot. The maximum match length is 2^15, so values higher than","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":50864,"byte_end":50960,"line_start":82,"line_end":82,"column_start":5,"column_end":101}},{"value":"/ this won't make any difference, and will be truncated to 2^15 by the compression","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":50965,"byte_end":51049,"line_start":83,"line_end":83,"column_start":5,"column_end":89}},{"value":"/ function/writer.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51054,"byte_end":51074,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51079,"byte_end":51082,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Default value: `128`","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51087,"byte_end":51111,"line_start":86,"line_end":86,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51741,"byte_end":51758,"line_start":101,"line_end":101,"column_start":9,"column_end":26},"name":"lazy_if_less_than","qualname":"::compression_options::CompressionOptions::lazy_if_less_than","value":"u16","parent":{"krate":0,"index":727},"children":[],"decl_id":null,"docs":" Only lazy match if we have a length less than this value.","sig":null,"attributes":[{"value":"/ Only lazy match if we have a length less than this value.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51176,"byte_end":51237,"line_start":89,"line_end":89,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51242,"byte_end":51245,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Higher values degrade compression slightly, but improve compression speed.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51250,"byte_end":51328,"line_start":91,"line_end":91,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51333,"byte_end":51336,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ * `0`: Never lazy match. (Same effect as setting `MatchingType` to greedy, but may be slower).","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51341,"byte_end":51439,"line_start":93,"line_end":93,"column_start":5,"column_end":103}},{"value":"/ * `1...257`: Only check for a better match if the first match was shorter than this value.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51444,"byte_end":51538,"line_start":94,"line_end":94,"column_start":5,"column_end":99}},{"value":"/ * `258`: Always lazy match.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51543,"byte_end":51574,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51579,"byte_end":51582,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ As the maximum length of a match is `258`, values higher than this will have","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51587,"byte_end":51667,"line_start":97,"line_end":97,"column_start":5,"column_end":85}},{"value":"/ no further effect.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51672,"byte_end":51694,"line_start":98,"line_end":98,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51699,"byte_end":51702,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ * Default value: `32`","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51707,"byte_end":51732,"line_start":100,"line_end":100,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":52383,"byte_end":52396,"line_start":116,"line_end":116,"column_start":9,"column_end":22},"name":"matching_type","qualname":"::compression_options::CompressionOptions::matching_type","value":"lz77::MatchingType","parent":{"krate":0,"index":727},"children":[],"decl_id":null,"docs":" Whether to use lazy or greedy matching.","sig":null,"attributes":[{"value":"/ Whether to use lazy or greedy matching.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51801,"byte_end":51844,"line_start":104,"line_end":104,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51849,"byte_end":51852,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Lazy matching will provide better compression, at the expense of compression speed.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51857,"byte_end":51944,"line_start":106,"line_end":106,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51949,"byte_end":51952,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ As a special case, if max_hash_checks is set to 0, and matching_type is set to lazy,","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":51957,"byte_end":52045,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/ compression using only run-length encoding (i.e maximum match distance of 1) is performed.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":52050,"byte_end":52144,"line_start":109,"line_end":109,"column_start":5,"column_end":99}},{"value":"/ (This may be changed in the future but is defined like this at the moment to avoid API","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":52149,"byte_end":52239,"line_start":110,"line_end":110,"column_start":5,"column_end":95}},{"value":"/ breakage.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":52244,"byte_end":52257,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":52262,"byte_end":52265,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [See `MatchingType`](./enum.MatchingType.html)","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":52270,"byte_end":52320,"line_start":113,"line_end":113,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":52325,"byte_end":52328,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ * Default value: `MatchingType::Lazy`","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":52333,"byte_end":52374,"line_start":115,"line_end":115,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":52527,"byte_end":52534,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"special","qualname":"::compression_options::CompressionOptions::special","value":"compression_options::SpecialOptions","parent":{"krate":0,"index":727},"children":[],"decl_id":null,"docs":" Force fixed/stored blocks (Not implemented yet).\n * Default value: `SpecialOptions::Normal`\n","sig":null,"attributes":[{"value":"/ Force fixed/stored blocks (Not implemented yet).","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":52416,"byte_end":52468,"line_start":117,"line_end":117,"column_start":5,"column_end":57}},{"value":"/ * Default value: `SpecialOptions::Normal`","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":52473,"byte_end":52518,"line_start":118,"line_end":118,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":52831,"byte_end":52835,"line_start":126,"line_end":126,"column_start":12,"column_end":16},"name":"high","qualname":"<CompressionOptions>::high","value":"fn () -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns compression settings roughly corresponding to the `HIGH(9)` setting in miniz.\n","sig":null,"attributes":[{"value":"/ Returns compression settings roughly corresponding to the `HIGH(9)` setting in miniz.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":52730,"byte_end":52819,"line_start":125,"line_end":125,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":53469,"byte_end":53473,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"fast","qualname":"<CompressionOptions>::fast","value":"fn () -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns  a fast set of compression settings","sig":null,"attributes":[{"value":"/ Returns  a fast set of compression settings","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":53110,"byte_end":53157,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":53162,"byte_end":53165,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Ideally this should roughly correspond to the `FAST(1)` setting in miniz.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":53170,"byte_end":53247,"line_start":137,"line_end":137,"column_start":5,"column_end":82}},{"value":"/ However, that setting makes miniz use a somewhat different algorithm,","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":53252,"byte_end":53325,"line_start":138,"line_end":138,"column_start":5,"column_end":78}},{"value":"/ so currently hte fast level in this library is slower and better compressing","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":53330,"byte_end":53410,"line_start":139,"line_end":139,"column_start":5,"column_end":85}},{"value":"/ than the corresponding level in miniz.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":53415,"byte_end":53457,"line_start":140,"line_end":140,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":54034,"byte_end":54046,"line_start":155,"line_end":155,"column_start":12,"column_end":24},"name":"huffman_only","qualname":"<CompressionOptions>::huffman_only","value":"fn () -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of compression settings that makes the compressor only compress using\n Huffman coding. (Ignoring any length/distance matching)","sig":null,"attributes":[{"value":"/ Returns a set of compression settings that makes the compressor only compress using","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":53710,"byte_end":53797,"line_start":150,"line_end":150,"column_start":5,"column_end":92}},{"value":"/ Huffman coding. (Ignoring any length/distance matching)","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":53802,"byte_end":53861,"line_start":151,"line_end":151,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":53866,"byte_end":53869,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This will normally have the worst compression ratio (besides only using uncompressed data),","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":53874,"byte_end":53969,"line_start":153,"line_end":153,"column_start":5,"column_end":100}},{"value":"/ but may be the fastest method in some cases.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":53974,"byte_end":54022,"line_start":154,"line_end":154,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":54724,"byte_end":54727,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"rle","qualname":"<CompressionOptions>::rle","value":"fn () -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of compression settings that makes the compressor compress only using\n run-length encoding (i.e only looking for matches one byte back).","sig":null,"attributes":[{"value":"/ Returns a set of compression settings that makes the compressor compress only using","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":54283,"byte_end":54370,"line_start":164,"line_end":164,"column_start":5,"column_end":92}},{"value":"/ run-length encoding (i.e only looking for matches one byte back).","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":54375,"byte_end":54444,"line_start":165,"line_end":165,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":54449,"byte_end":54452,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This is very fast, but tends to compress worse than looking for more matches using hash","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":54457,"byte_end":54548,"line_start":167,"line_end":167,"column_start":5,"column_end":96}},{"value":"/ chains that the slower settings do.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":54553,"byte_end":54592,"line_start":168,"line_end":168,"column_start":5,"column_end":44}},{"value":"/ Works best on data that has runs of equivalent bytes, like binary or simple images,","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":54597,"byte_end":54684,"line_start":169,"line_end":169,"column_start":5,"column_end":92}},{"value":"/ less good for text.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":54689,"byte_end":54712,"line_start":170,"line_end":170,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":131301,"byte_end":131307,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Greedy","qualname":"::lz77::MatchingType::Greedy","value":"MatchingType::Greedy","parent":{"krate":0,"index":800},"children":[],"decl_id":null,"docs":" Use greedy matching: the matching algorithm simply uses a match right away\n if found.\n","sig":null,"attributes":[{"value":"/ Use greedy matching: the matching algorithm simply uses a match right away","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":131200,"byte_end":131278,"line_start":28,"line_end":28,"column_start":5,"column_end":83}},{"value":"/ if found.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":131283,"byte_end":131296,"line_start":29,"line_end":29,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":131625,"byte_end":131629,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Lazy","qualname":"::lz77::MatchingType::Lazy","value":"MatchingType::Lazy","parent":{"krate":0,"index":800},"children":[],"decl_id":null,"docs":" Use lazy matching: after finding a match, the next input byte is checked, to see\n if there is a better match starting at that byte.","sig":null,"attributes":[{"value":"/ Use lazy matching: after finding a match, the next input byte is checked, to see","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":131313,"byte_end":131397,"line_start":31,"line_end":31,"column_start":5,"column_end":89}},{"value":"/ if there is a better match starting at that byte.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":131402,"byte_end":131455,"line_start":32,"line_end":32,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":131460,"byte_end":131463,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ As a special case, if max_hash_checks is set to 0, compression using only run-length","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":131468,"byte_end":131556,"line_start":34,"line_end":34,"column_start":5,"column_end":93}},{"value":"/ (i.e maximum match distance of 1) is performed instead.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":131561,"byte_end":131620,"line_start":35,"line_end":35,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":131181,"byte_end":131193,"line_start":27,"line_end":27,"column_start":10,"column_end":22},"name":"MatchingType","qualname":"::lz77::MatchingType","value":"MatchingType::{Greedy, Lazy}","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":803}],"decl_id":null,"docs":" An enum describing whether we use lazy or greedy matching.\n","sig":null,"attributes":[{"value":"/ An enum describing whether we use lazy or greedy matching.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":131041,"byte_end":131103,"line_start":25,"line_end":25,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":208043,"byte_end":208057,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::writer::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":567}],"decl_id":null,"docs":" A DEFLATE encoder/compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder/compressor.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207271,"byte_end":207304,"line_start":62,"line_end":62,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207305,"byte_end":207308,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ A struct implementing a [`Write`] interface that takes arbitrary data and compresses it to","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207309,"byte_end":207403,"line_start":64,"line_end":64,"column_start":1,"column_end":95}},{"value":"/ the provided writer using DEFLATE compression.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207404,"byte_end":207454,"line_start":65,"line_end":65,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207455,"byte_end":207458,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207459,"byte_end":207473,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207474,"byte_end":207477,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207478,"byte_end":207489,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207490,"byte_end":207508,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ #","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207509,"byte_end":207514,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ # fn try_main() -> io::Result<Vec<u8>> {","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207515,"byte_end":207559,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207560,"byte_end":207565,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ use std::io::Write;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207566,"byte_end":207589,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207590,"byte_end":207593,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ use deflate::Compression;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207594,"byte_end":207623,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/ use deflate::write::DeflateEncoder;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207624,"byte_end":207663,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207664,"byte_end":207667,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207668,"byte_end":207709,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/ let mut encoder = DeflateEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207710,"byte_end":207786,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ encoder.write_all(data)?;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207787,"byte_end":207816,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/ let compressed_data = encoder.finish()?;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207817,"byte_end":207861,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/ # Ok(compressed_data)","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207862,"byte_end":207887,"line_start":83,"line_end":83,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207888,"byte_end":207893,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207894,"byte_end":207901,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207902,"byte_end":207919,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/ #     try_main().unwrap();","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207920,"byte_end":207950,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207951,"byte_end":207958,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207959,"byte_end":207966,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":207967,"byte_end":208031,"line_start":90,"line_end":90,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":208225,"byte_end":208228,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<W>>::new","value":"fn <O> (writer: W, options: O) -> DeflateEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder using the provided compression options.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder using the provided compression options.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":208148,"byte_end":208213,"line_start":96,"line_end":96,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":208576,"byte_end":208582,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"finish","qualname":"<DeflateEncoder<W>>::finish","value":"fn (mut self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Encode all pending data to the contained writer, consume this `DeflateEncoder`,\n and return the contained writer if writing succeeds.\n","sig":null,"attributes":[{"value":"/ Encode all pending data to the contained writer, consume this `DeflateEncoder`,","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":208420,"byte_end":208503,"line_start":103,"line_end":103,"column_start":5,"column_end":88}},{"value":"/ and return the contained writer if writing succeeds.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":208508,"byte_end":208564,"line_start":104,"line_end":104,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":208998,"byte_end":209003,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<W>>::reset","value":"fn (&mut self, w: W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoder (except the compression options), replacing the current writer\n with a new one, returning the old one.\n","sig":null,"attributes":[{"value":"/ Resets the encoder (except the compression options), replacing the current writer","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":208854,"byte_end":208939,"line_start":112,"line_end":112,"column_start":5,"column_end":90}},{"value":"/ with a new one, returning the old one.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":208944,"byte_end":208986,"line_start":113,"line_end":113,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211386,"byte_end":211397,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::writer::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586}],"decl_id":null,"docs":" A Zlib encoder/compressor.","sig":null,"attributes":[{"value":"/ A Zlib encoder/compressor.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":210592,"byte_end":210622,"line_start":156,"line_end":156,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":210623,"byte_end":210626,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ A struct implementing a [`Write`] interface that takes arbitrary data and compresses it to","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":210627,"byte_end":210721,"line_start":158,"line_end":158,"column_start":1,"column_end":95}},{"value":"/ the provided writer using DEFLATE compression with Zlib headers and trailers.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":210722,"byte_end":210803,"line_start":159,"line_end":159,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":210804,"byte_end":210807,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":210808,"byte_end":210822,"line_start":161,"line_end":161,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":210823,"byte_end":210826,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":210827,"byte_end":210838,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":210839,"byte_end":210857,"line_start":164,"line_end":164,"column_start":1,"column_end":19}},{"value":"/ #","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":210858,"byte_end":210863,"line_start":165,"line_end":165,"column_start":1,"column_end":6}},{"value":"/ # fn try_main() -> io::Result<Vec<u8>> {","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":210864,"byte_end":210908,"line_start":166,"line_end":166,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":210909,"byte_end":210914,"line_start":167,"line_end":167,"column_start":1,"column_end":6}},{"value":"/ use std::io::Write;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":210915,"byte_end":210938,"line_start":168,"line_end":168,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":210939,"byte_end":210942,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ use deflate::Compression;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":210943,"byte_end":210972,"line_start":170,"line_end":170,"column_start":1,"column_end":30}},{"value":"/ use deflate::write::ZlibEncoder;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":210973,"byte_end":211009,"line_start":171,"line_end":171,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211010,"byte_end":211013,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211014,"byte_end":211055,"line_start":173,"line_end":173,"column_start":1,"column_end":42}},{"value":"/ let mut encoder = ZlibEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211056,"byte_end":211129,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/ encoder.write_all(data)?;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211130,"byte_end":211159,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ let compressed_data = encoder.finish()?;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211160,"byte_end":211204,"line_start":176,"line_end":176,"column_start":1,"column_end":45}},{"value":"/ # Ok(compressed_data)","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211205,"byte_end":211230,"line_start":177,"line_end":177,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211231,"byte_end":211236,"line_start":178,"line_end":178,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211237,"byte_end":211244,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211245,"byte_end":211262,"line_start":180,"line_end":180,"column_start":1,"column_end":18}},{"value":"/ #     try_main().unwrap();","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211263,"byte_end":211293,"line_start":181,"line_end":181,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211294,"byte_end":211301,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211302,"byte_end":211309,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211310,"byte_end":211374,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211624,"byte_end":211627,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<W>>::new","value":"fn <O> (writer: W, options: O) -> ZlibEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ZlibEncoder` using the provided compression options.\n","sig":null,"attributes":[{"value":"/ Create a new `ZlibEncoder` using the provided compression options.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211542,"byte_end":211612,"line_start":192,"line_end":192,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":212372,"byte_end":212378,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZlibEncoder<W>>::finish","value":"fn (mut self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Encode all pending data to the contained writer, consume this `ZlibEncoder`,\n and return the contained writer if writing succeeds.\n","sig":null,"attributes":[{"value":"/ Encode all pending data to the contained writer, consume this `ZlibEncoder`,","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":212219,"byte_end":212299,"line_start":209,"line_end":209,"column_start":5,"column_end":85}},{"value":"/ and return the contained writer if writing succeeds.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":212304,"byte_end":212360,"line_start":210,"line_end":210,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":212794,"byte_end":212799,"line_start":220,"line_end":220,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<W>>::reset","value":"fn (&mut self, writer: W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoder (except the compression options), replacing the current writer\n with a new one, returning the old one.\n","sig":null,"attributes":[{"value":"/ Resets the encoder (except the compression options), replacing the current writer","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":212650,"byte_end":212735,"line_start":218,"line_end":218,"column_start":5,"column_end":90}},{"value":"/ with a new one, returning the old one.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":212740,"byte_end":212782,"line_start":219,"line_end":219,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":213701,"byte_end":213709,"line_start":248,"line_end":248,"column_start":12,"column_end":20},"name":"checksum","qualname":"<ZlibEncoder<W>>::checksum","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the adler32 checksum of the currently consumed data.\n","sig":null,"attributes":[{"value":"/ Return the adler32 checksum of the currently consumed data.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":213626,"byte_end":213689,"line_start":247,"line_end":247,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":3182,"byte_end":3187,"line_start":107,"line_end":107,"column_start":9,"column_end":14},"name":"write","qualname":"::write","value":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":644}],"decl_id":null,"docs":" Encoders implementing a `Write` interface.\n","sig":null,"attributes":[{"value":"/ Encoders implementing a `Write` interface.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":3127,"byte_end":3173,"line_start":106,"line_end":106,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4240,"byte_end":4258,"line_start":140,"line_end":140,"column_start":8,"column_end":26},"name":"deflate_bytes_conf","qualname":"::deflate_bytes_conf","value":"fn <O> (input: &[u8], options: O) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":3878,"byte_end":3941,"line_start":127,"line_end":127,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":3942,"byte_end":3945,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec<u8>` of the compressed data.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":3946,"byte_end":3993,"line_start":129,"line_end":129,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":3994,"byte_end":3997,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":3998,"byte_end":4012,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4013,"byte_end":4016,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4017,"byte_end":4024,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use deflate::{deflate_bytes_conf, Compression};","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4025,"byte_end":4076,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4077,"byte_end":4080,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4081,"byte_end":4122,"line_start":136,"line_end":136,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes_conf(data, Compression::Best);","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4123,"byte_end":4193,"line_start":137,"line_end":137,"column_start":1,"column_end":71}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4194,"byte_end":4224,"line_start":138,"line_end":138,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4225,"byte_end":4232,"line_start":139,"line_end":139,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4916,"byte_end":4929,"line_start":166,"line_end":166,"column_start":8,"column_end":21},"name":"deflate_bytes","qualname":"::deflate_bytes","value":"fn (input: &[u8]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression using the default compression\n level.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression using the default compression","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4558,"byte_end":4650,"line_start":152,"line_end":152,"column_start":1,"column_end":93}},{"value":"/ level.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4651,"byte_end":4661,"line_start":153,"line_end":153,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4662,"byte_end":4665,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec<u8>` of the compressed data.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4666,"byte_end":4713,"line_start":155,"line_end":155,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4714,"byte_end":4717,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4718,"byte_end":4732,"line_start":157,"line_end":157,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4733,"byte_end":4736,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4737,"byte_end":4744,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ use deflate::deflate_bytes;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4745,"byte_end":4776,"line_start":160,"line_end":160,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4777,"byte_end":4780,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4781,"byte_end":4822,"line_start":162,"line_end":162,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes(data);","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4823,"byte_end":4869,"line_start":163,"line_end":163,"column_start":1,"column_end":47}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4870,"byte_end":4900,"line_start":164,"line_end":164,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":4901,"byte_end":4908,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":5469,"byte_end":5492,"line_start":185,"line_end":185,"column_start":8,"column_end":31},"name":"deflate_bytes_zlib_conf","qualname":"::deflate_bytes_zlib_conf","value":"fn <O> (input: &[u8], options: O) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":5012,"byte_end":5112,"line_start":170,"line_end":170,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":5113,"byte_end":5116,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec<u8>` of the compressed data.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":5117,"byte_end":5164,"line_start":172,"line_end":172,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":5165,"byte_end":5168,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Zlib dictionaries are not yet suppored.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":5169,"byte_end":5212,"line_start":174,"line_end":174,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":5213,"byte_end":5216,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":5217,"byte_end":5231,"line_start":176,"line_end":176,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":5232,"byte_end":5235,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":5236,"byte_end":5243,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/ use deflate::{deflate_bytes_zlib_conf, Compression};","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":5244,"byte_end":5300,"line_start":179,"line_end":179,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":5301,"byte_end":5304,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":5305,"byte_end":5346,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes_zlib_conf(data, Compression::Best);","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":5347,"byte_end":5422,"line_start":182,"line_end":182,"column_start":1,"column_end":76}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":5423,"byte_end":5453,"line_start":183,"line_end":183,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":5454,"byte_end":5461,"line_start":184,"line_end":184,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6614,"byte_end":6632,"line_start":220,"line_end":220,"column_start":8,"column_end":26},"name":"deflate_bytes_zlib","qualname":"::deflate_bytes_zlib","value":"fn (input: &[u8]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer,\n using the default compression level.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer,","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6162,"byte_end":6262,"line_start":204,"line_end":204,"column_start":1,"column_end":101}},{"value":"/ using the default compression level.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6263,"byte_end":6303,"line_start":205,"line_end":205,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6304,"byte_end":6307,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ Returns a Vec<u8> of the compressed data.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6308,"byte_end":6353,"line_start":207,"line_end":207,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6354,"byte_end":6357,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ Zlib dictionaries are not yet suppored.","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6358,"byte_end":6401,"line_start":209,"line_end":209,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6402,"byte_end":6405,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6406,"byte_end":6420,"line_start":211,"line_end":211,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6421,"byte_end":6424,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6425,"byte_end":6432,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/ use deflate::deflate_bytes_zlib;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6433,"byte_end":6469,"line_start":214,"line_end":214,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6470,"byte_end":6473,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6474,"byte_end":6515,"line_start":216,"line_end":216,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes_zlib(data);","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6516,"byte_end":6567,"line_start":217,"line_end":217,"column_start":1,"column_end":52}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6568,"byte_end":6598,"line_start":218,"line_end":218,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lib.rs","byte_start":6599,"byte_end":6606,"line_start":219,"line_end":219,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\bitstream.rs","byte_start":17624,"byte_end":17633,"line_start":61,"line_end":61,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\bitstream.rs","byte_start":19095,"byte_end":19104,"line_start":109,"line_end":109,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\chained_hash_table.rs","byte_start":22282,"byte_end":22288,"line_start":16,"line_end":16,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\chained_hash_table.rs","byte_start":22447,"byte_end":22453,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\chained_hash_table.rs","byte_start":23973,"byte_end":23989,"line_start":80,"line_end":80,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\checksum.rs","byte_start":33408,"byte_end":33418,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\checksum.rs","byte_start":33510,"byte_end":33520,"line_start":17,"line_end":17,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\checksum.rs","byte_start":33917,"byte_end":33932,"line_start":37,"line_end":37,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\checksum.rs","byte_start":34087,"byte_end":34102,"line_start":45,"line_end":45,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49680,"byte_end":49691,"line_start":44,"line_end":44,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":50120,"byte_end":50134,"line_start":61,"line_end":61,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":52705,"byte_end":52723,"line_start":124,"line_end":124,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":54977,"byte_end":54995,"line_start":181,"line_end":181,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":55169,"byte_end":55187,"line_start":188,"line_end":188,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\deflate_state.rs","byte_start":56131,"byte_end":56143,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\deflate_state.rs","byte_start":56739,"byte_end":56752,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\deflate_state.rs","byte_start":58271,"byte_end":58283,"line_start":93,"line_end":93,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\encoder_state.rs","byte_start":61117,"byte_end":61129,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\huffman_table.rs","byte_start":89261,"byte_end":89272,"line_start":201,"line_end":201,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\huffman_table.rs","byte_start":89479,"byte_end":89490,"line_start":211,"line_end":211,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\huffman_table.rs","byte_start":92242,"byte_end":92254,"line_start":289,"line_end":289,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\input_buffer.rs","byte_start":100818,"byte_end":100829,"line_start":14,"line_end":14,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\length_encode.rs","byte_start":105984,"byte_end":105997,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":131656,"byte_end":131668,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":133192,"byte_end":133201,"line_start":76,"line_end":76,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":136126,"byte_end":136136,"line_start":175,"line_end":175,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lzvalue.rs","byte_start":176083,"byte_end":176095,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lzvalue.rs","byte_start":176866,"byte_end":176873,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\output_writer.rs","byte_start":195264,"byte_end":195277,"line_start":36,"line_end":36,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":208124,"byte_end":208138,"line_start":95,"line_end":95,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":209358,"byte_end":209372,"line_start":125,"line_end":125,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":209956,"byte_end":209970,"line_start":141,"line_end":141,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211521,"byte_end":211532,"line_start":191,"line_end":191,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":213801,"byte_end":213812,"line_start":253,"line_end":253,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":214810,"byte_end":214821,"line_start":279,"line_end":279,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\bitstream.rs","byte_start":17624,"byte_end":17633,"line_start":61,"line_end":61,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":16},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\bitstream.rs","byte_start":19095,"byte_end":19104,"line_start":109,"line_end":109,"column_start":16,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":16},"to":{"krate":1,"index":2915}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\chained_hash_table.rs","byte_start":22282,"byte_end":22288,"line_start":16,"line_end":16,"column_start":18,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":34},"to":{"krate":2,"index":1874}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\chained_hash_table.rs","byte_start":22447,"byte_end":22453,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\chained_hash_table.rs","byte_start":23973,"byte_end":23989,"line_start":80,"line_end":80,"column_start":6,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":50},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\checksum.rs","byte_start":33408,"byte_end":33418,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":72},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\checksum.rs","byte_start":33510,"byte_end":33520,"line_start":17,"line_end":17,"column_start":26,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":72},"to":{"krate":0,"index":68}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\checksum.rs","byte_start":33917,"byte_end":33932,"line_start":37,"line_end":37,"column_start":6,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\checksum.rs","byte_start":34087,"byte_end":34102,"line_start":45,"line_end":45,"column_start":26,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":84},"to":{"krate":0,"index":68}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":49680,"byte_end":49691,"line_start":44,"line_end":44,"column_start":18,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":1874}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":50120,"byte_end":50134,"line_start":61,"line_end":61,"column_start":18,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":706},"to":{"krate":2,"index":1874}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":52705,"byte_end":52723,"line_start":124,"line_end":124,"column_start":6,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":54977,"byte_end":54995,"line_start":181,"line_end":181,"column_start":18,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":727},"to":{"krate":2,"index":1874}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\compression_options.rs","byte_start":55169,"byte_end":55187,"line_start":188,"line_end":188,"column_start":28,"column_end":46},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":727},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\deflate_state.rs","byte_start":56131,"byte_end":56143,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\deflate_state.rs","byte_start":56739,"byte_end":56752,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\deflate_state.rs","byte_start":58271,"byte_end":58283,"line_start":93,"line_end":93,"column_start":16,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\encoder_state.rs","byte_start":61117,"byte_end":61129,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\huffman_table.rs","byte_start":89261,"byte_end":89272,"line_start":201,"line_end":201,"column_start":21,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":758},"to":{"krate":2,"index":5985}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\huffman_table.rs","byte_start":89479,"byte_end":89490,"line_start":211,"line_end":211,"column_start":6,"column_end":17},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\huffman_table.rs","byte_start":92242,"byte_end":92254,"line_start":289,"line_end":289,"column_start":6,"column_end":18},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\input_buffer.rs","byte_start":100818,"byte_end":100829,"line_start":14,"line_end":14,"column_start":6,"column_end":17},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\length_encode.rs","byte_start":105984,"byte_end":105997,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":131656,"byte_end":131668,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":800},"to":{"krate":2,"index":5990}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":133192,"byte_end":133201,"line_start":76,"line_end":76,"column_start":6,"column_end":15},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lz77.rs","byte_start":136126,"byte_end":136136,"line_start":175,"line_end":175,"column_start":6,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lzvalue.rs","byte_start":176083,"byte_end":176095,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\lzvalue.rs","byte_start":176866,"byte_end":176873,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\output_writer.rs","byte_start":195264,"byte_end":195277,"line_start":36,"line_end":36,"column_start":6,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":208124,"byte_end":208138,"line_start":95,"line_end":95,"column_start":16,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":209358,"byte_end":209372,"line_start":125,"line_end":125,"column_start":30,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":565},"to":{"krate":1,"index":2915}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":209956,"byte_end":209970,"line_start":141,"line_end":141,"column_start":25,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":565},"to":{"krate":2,"index":2076}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":211521,"byte_end":211532,"line_start":191,"line_end":191,"column_start":16,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":213801,"byte_end":213812,"line_start":253,"line_end":253,"column_start":30,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":582},"to":{"krate":1,"index":2915}},{"span":{"file_name":"C:\\Users\\Richard\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.4\\src\\writer.rs","byte_start":214810,"byte_end":214821,"line_start":279,"line_end":279,"column_start":25,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":582},"to":{"krate":2,"index":2076}}]}